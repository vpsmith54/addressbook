package com.vpsmith.rest.addressbook.contact;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.util.UriComponentsBuilder;

import java.util.List;

@Controller
@RequestMapping(path = "addressbook", produces = MediaType.APPLICATION_JSON_VALUE)
public class ContactController {

    @Autowired // This means to get the bean called contactService
    // Which is auto-generated by Spring, we will use it to handle the data
    private ContactService contactService;

    @PostMapping(path = "contact", consumes = "application/json")
    public ResponseEntity<Void> addUser(@RequestBody ContactEntity contact) {
        HttpHeaders headers = new HttpHeaders();
        contactService.updateContact(contact);
        UriComponentsBuilder builder = UriComponentsBuilder.newInstance();
        headers.setLocation(builder.path("/contact/{id}").buildAndExpand(contact.getId()).toUri());
        return new ResponseEntity<Void>(headers, HttpStatus.CREATED);
    }

    @GetMapping(path = "contacts")
    public ResponseEntity<List<ContactEntity>> getAllContacts() {
        // This returns a JSON or XML with the contacts
        List<ContactEntity> contacts = contactService.getAllContacts();
        return new ResponseEntity<List<ContactEntity>>(contacts, HttpStatus.OK);
    }

    @GetMapping(path = "contact/{id}")
    public ResponseEntity<ContactEntity> getContactById(@PathVariable Integer id) {
        // This returns a JSON or XML with the contacts
        ContactEntity contact = contactService.getContactById(id);
        return new ResponseEntity<ContactEntity>(contact, HttpStatus.OK);
    }

    @PutMapping(path = "contact", consumes = "application/json")
    public ResponseEntity<ContactEntity> updateContact(@RequestBody ContactEntity contact) {
        contactService.updateContact(contact);
        return new ResponseEntity<ContactEntity>(contact, HttpStatus.OK);

    }
}
